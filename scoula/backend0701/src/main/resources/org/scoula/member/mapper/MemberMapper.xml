<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="org.scoula.member.mapper.MemberMapper">

    <!-- ResultMap 설정 -->

    <!-- 권한 정보 매핑 -->
    <resultMap id="authMap" type="AuthVO">
        <result property="username" column="username" />
        <result property="auth" column="auth" />
    </resultMap>

    <!-- 회원 정보 매핑 (권한 포함) -->
    <resultMap id="memberMap" type="MemberVO">
        <id property="username" column="username" />
        <result property="password" column="password" />
        <result property="email" column="email" />
        <result property="regDate" column="reg_date" />
        <result property="updateDate" column="update_date" />
        <collection property="authList" resultMap="authMap" />
    </resultMap>


    <!-- SQL -->
    <!-- 회원 정보 조회 (LEFT JOIN으로 권한 정보 포함) -->
    <select id="get" resultMap="memberMap">
        SELECT m.username, password, email, reg_date, update_date, auth
        FROM tbl_member m
                 LEFT OUTER JOIN tbl_member_auth a ON m.username = a.username
        WHERE m.username = #{username}
    </select>

    <!-- ID 중복 체크용 조회 -->
    <select id="findByUsername" resultType="org.scoula.security.account.domain.MemberVO">
        SELECT * FROM tbl_member WHERE username = #{username}
    </select>

    <!-- 회원 정보 저장 -->
    <insert id="insert">
        INSERT INTO tbl_member
        VALUES(#{username}, #{password}, #{email}, now(), now())
    </insert>

    <!-- 권한 정보 저장 -->
    <insert id="insertAuth">
        INSERT INTO tbl_member_auth(username, auth)
        VALUES(#{username}, #{auth})
    </insert>

    <!-- 회원 정보 수정-->
    <update id="update">
        UPDATE tbl_member
        SET
        email = #{email},
        update_date = now()             <!-- 수정 시간 자동 업데이트 -->
        WHERE username = #{username}
    </update>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword">
        UPDATE tbl_member
        SET
        password = #{newPassword},      <!-- 암호화된 새 비밀번호 -->
        update_date = now()            <!-- 수정 시간 자동 업데이트 -->
        WHERE username = #{username}
    </update>

</mapper>